<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shitouren.core.autogenerate.dao.TaskDao">
  <resultMap id="BaseResultMap" type="com.shitouren.core.autogenerate.bean.Task">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="creattime" jdbcType="TIMESTAMP" property="creattime" />
    <result column="day" jdbcType="INTEGER" property="day" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="other_id" jdbcType="VARCHAR" property="otherId" />
    <result column="current_points" jdbcType="DECIMAL" property="currentPoints" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, price, state, creattime, day, remark, other_id, current_points
  </sql>
  <select id="selectByExample" parameterType="com.shitouren.core.autogenerate.bean.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shitouren.core.autogenerate.bean.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.Task" useGeneratedKeys="true">
    insert into task (userid, price, state,
      creattime, day, remark,
      other_id, current_points)
    values (#{userid,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER},
      #{creattime,jdbcType=TIMESTAMP}, #{day,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
      #{otherId,jdbcType=VARCHAR}, #{currentPoints,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.Task" useGeneratedKeys="true">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="creattime != null">
        creattime,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="otherId != null">
        other_id,
      </if>
      <if test="currentPoints != null">
        current_points,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="day != null">
        #{day,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="otherId != null">
        #{otherId,jdbcType=VARCHAR},
      </if>
      <if test="currentPoints != null">
        #{currentPoints,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shitouren.core.autogenerate.bean.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="getTodaySignRecords" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from task
        where userid = #{userId,jdbcType=INTEGER}
          and date(creattime) = date(#{createTime,jdbcType=TIMESTAMP})
          and state = #{state,jdbcType=INTEGER}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.creattime != null">
        creattime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.otherId != null">
        other_id = #{record.otherId,jdbcType=VARCHAR},
      </if>
      <if test="record.currentPoints != null">
        current_points = #{record.currentPoints,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=INTEGER},
      creattime = #{record.creattime,jdbcType=TIMESTAMP},
      day = #{record.day,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      other_id = #{record.otherId,jdbcType=VARCHAR},
      current_points = #{record.currentPoints,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shitouren.core.autogenerate.bean.Task">
    update task
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="creattime != null">
        creattime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="otherId != null">
        other_id = #{otherId,jdbcType=VARCHAR},
      </if>
      <if test="currentPoints != null">
        current_points = #{currentPoints,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shitouren.core.autogenerate.bean.Task">
    update task
    set userid = #{userid,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      creattime = #{creattime,jdbcType=TIMESTAMP},
      day = #{day,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      other_id = #{otherId,jdbcType=VARCHAR},
      current_points = #{currentPoints,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].id!=null">
        id,
      </if>
      <if test="list[0].userid!=null">
        userid,
      </if>
      <if test="list[0].price!=null">
        price,
      </if>
      <if test="list[0].state!=null">
        state,
      </if>
      <if test="list[0].creattime!=null">
        creattime,
      </if>
      <if test="list[0].day!=null">
        day,
      </if>
      <if test="list[0].remark!=null">
        remark,
      </if>
      <if test="list[0].otherId!=null">
        other_id,
      </if>
      <if test="list[0].currentPoints!=null">
        current_points,
      </if>
    </trim>
     values
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.userid!=null">
          #{item.userid,jdbcType=INTEGER},
        </if>
        <if test="item.price!=null">
          #{item.price,jdbcType=DECIMAL},
        </if>
        <if test="item.state!=null">
          #{item.state,jdbcType=INTEGER},
        </if>
        <if test="item.creattime!=null">
          #{item.creattime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.day!=null">
          #{item.day,jdbcType=INTEGER},
        </if>
        <if test="item.remark!=null">
          #{item.remark,jdbcType=VARCHAR},
        </if>
        <if test="item.otherId!=null">
          #{item.otherId,jdbcType=VARCHAR},
        </if>
        <if test="item.currentPoints!=null">
          #{item.currentPoints,jdbcType=DECIMAL},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update task
      <set>
        <if test="item.userid!=null">
          userid=#{item.userid,jdbcType=INTEGER},
        </if>
        <if test="item.price!=null">
          price=#{item.price,jdbcType=DECIMAL},
        </if>
        <if test="item.state!=null">
          state=#{item.state,jdbcType=INTEGER},
        </if>
        <if test="item.creattime!=null">
          creattime=#{item.creattime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.day!=null">
          day=#{item.day,jdbcType=INTEGER},
        </if>
        <if test="item.remark!=null">
          remark=#{item.remark,jdbcType=VARCHAR},
        </if>
        <if test="item.otherId!=null">
          other_id=#{item.otherId,jdbcType=VARCHAR},
        </if>
        <if test="item.currentPoints!=null">
          current_points=#{item.currentPoints,jdbcType=DECIMAL},
        </if>
      </set>
      where
      id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>
