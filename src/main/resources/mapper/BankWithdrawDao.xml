<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shitouren.core.autogenerate.dao.BankWithdrawDao">
  <resultMap id="BaseResultMap" type="com.shitouren.core.autogenerate.bean.BankWithdraw">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="bank_code" jdbcType="INTEGER" property="bankCode" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="withdraw_type" jdbcType="INTEGER" property="withdrawType" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="service_fee" jdbcType="DECIMAL" property="serviceFee" />
    <result column="actual_money" jdbcType="DECIMAL" property="actualMoney" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, username, card_no, bank_code, province, city, bank_name, money, withdraw_type, 
    idcard, service_fee, actual_money, createtime, state
  </sql>
  <select id="selectByExample" parameterType="com.shitouren.core.autogenerate.bean.BankWithdrawExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank_withdraw
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bank_withdraw
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shitouren.core.autogenerate.bean.BankWithdrawExample">
    delete from bank_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.BankWithdraw" useGeneratedKeys="true">
    insert into bank_withdraw (userid, username, card_no, 
      bank_code, province, city, 
      bank_name, money, withdraw_type, 
      idcard, service_fee, actual_money, 
      createtime, state)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, 
      #{bankCode,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{withdrawType,jdbcType=INTEGER}, 
      #{idcard,jdbcType=VARCHAR}, #{serviceFee,jdbcType=DECIMAL}, #{actualMoney,jdbcType=DECIMAL}, 
      #{createtime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.BankWithdraw" useGeneratedKeys="true">
    insert into bank_withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="withdrawType != null">
        withdraw_type,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="serviceFee != null">
        service_fee,
      </if>
      <if test="actualMoney != null">
        actual_money,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="withdrawType != null">
        #{withdrawType,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null">
        #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shitouren.core.autogenerate.bean.BankWithdrawExample" resultType="java.lang.Long">
    select count(*) from bank_withdraw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bank_withdraw
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bank_code = #{record.bankCode,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.withdrawType != null">
        withdraw_type = #{record.withdrawType,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceFee != null">
        service_fee = #{record.serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.actualMoney != null">
        actual_money = #{record.actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bank_withdraw
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      withdraw_type = #{record.withdrawType,jdbcType=INTEGER},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      service_fee = #{record.serviceFee,jdbcType=DECIMAL},
      actual_money = #{record.actualMoney,jdbcType=DECIMAL},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shitouren.core.autogenerate.bean.BankWithdraw">
    update bank_withdraw
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="withdrawType != null">
        withdraw_type = #{withdrawType,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null">
        service_fee = #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="actualMoney != null">
        actual_money = #{actualMoney,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shitouren.core.autogenerate.bean.BankWithdraw">
    update bank_withdraw
    set userid = #{userid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      withdraw_type = #{withdrawType,jdbcType=INTEGER},
      idcard = #{idcard,jdbcType=VARCHAR},
      service_fee = #{serviceFee,jdbcType=DECIMAL},
      actual_money = #{actualMoney,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into bank_withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].id!=null">
        id,
      </if>
      <if test="list[0].userid!=null">
        userid,
      </if>
      <if test="list[0].username!=null">
        username,
      </if>
      <if test="list[0].cardNo!=null">
        card_no,
      </if>
      <if test="list[0].bankCode!=null">
        bank_code,
      </if>
      <if test="list[0].province!=null">
        province,
      </if>
      <if test="list[0].city!=null">
        city,
      </if>
      <if test="list[0].bankName!=null">
        bank_name,
      </if>
      <if test="list[0].money!=null">
        money,
      </if>
      <if test="list[0].withdrawType!=null">
        withdraw_type,
      </if>
      <if test="list[0].idcard!=null">
        idcard,
      </if>
      <if test="list[0].serviceFee!=null">
        service_fee,
      </if>
      <if test="list[0].actualMoney!=null">
        actual_money,
      </if>
      <if test="list[0].createtime!=null">
        createtime,
      </if>
      <if test="list[0].state!=null">
        state,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.userid!=null">
          #{item.userid,jdbcType=INTEGER},
        </if>
        <if test="item.username!=null">
          #{item.username,jdbcType=VARCHAR},
        </if>
        <if test="item.cardNo!=null">
          #{item.cardNo,jdbcType=VARCHAR},
        </if>
        <if test="item.bankCode!=null">
          #{item.bankCode,jdbcType=INTEGER},
        </if>
        <if test="item.province!=null">
          #{item.province,jdbcType=VARCHAR},
        </if>
        <if test="item.city!=null">
          #{item.city,jdbcType=VARCHAR},
        </if>
        <if test="item.bankName!=null">
          #{item.bankName,jdbcType=VARCHAR},
        </if>
        <if test="item.money!=null">
          #{item.money,jdbcType=DECIMAL},
        </if>
        <if test="item.withdrawType!=null">
          #{item.withdrawType,jdbcType=INTEGER},
        </if>
        <if test="item.idcard!=null">
          #{item.idcard,jdbcType=VARCHAR},
        </if>
        <if test="item.serviceFee!=null">
          #{item.serviceFee,jdbcType=DECIMAL},
        </if>
        <if test="item.actualMoney!=null">
          #{item.actualMoney,jdbcType=DECIMAL},
        </if>
        <if test="item.createtime!=null">
          #{item.createtime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.state!=null">
          #{item.state,jdbcType=INTEGER},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update bank_withdraw
      <set>
        <if test="item.userid!=null">
          userid=#{item.userid,jdbcType=INTEGER},
        </if>
        <if test="item.username!=null">
          username=#{item.username,jdbcType=VARCHAR},
        </if>
        <if test="item.cardNo!=null">
          card_no=#{item.cardNo,jdbcType=VARCHAR},
        </if>
        <if test="item.bankCode!=null">
          bank_code=#{item.bankCode,jdbcType=INTEGER},
        </if>
        <if test="item.province!=null">
          province=#{item.province,jdbcType=VARCHAR},
        </if>
        <if test="item.city!=null">
          city=#{item.city,jdbcType=VARCHAR},
        </if>
        <if test="item.bankName!=null">
          bank_name=#{item.bankName,jdbcType=VARCHAR},
        </if>
        <if test="item.money!=null">
          money=#{item.money,jdbcType=DECIMAL},
        </if>
        <if test="item.withdrawType!=null">
          withdraw_type=#{item.withdrawType,jdbcType=INTEGER},
        </if>
        <if test="item.idcard!=null">
          idcard=#{item.idcard,jdbcType=VARCHAR},
        </if>
        <if test="item.serviceFee!=null">
          service_fee=#{item.serviceFee,jdbcType=DECIMAL},
        </if>
        <if test="item.actualMoney!=null">
          actual_money=#{item.actualMoney,jdbcType=DECIMAL},
        </if>
        <if test="item.createtime!=null">
          createtime=#{item.createtime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.state!=null">
          state=#{item.state,jdbcType=INTEGER},
        </if>
      </set>
      where 
      id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>